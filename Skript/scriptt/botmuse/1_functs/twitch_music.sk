import:
	ch.njol.skript.lang.Variable
	ch.njol.skript.Skript



#SEARCH INDEX TAGS
effect music-filter %string% to %~objects% %~objects% %~object% %~object% %~string%:
	parse:
		expr-2 is an instance of Variable
		expr-3 is an instance of Variable
		expr-4 is an instance of Variable
		expr-5 is an instance of Variable
		expr-6 is an instance of Variable
		continue
	trigger:
		delay effect
		set {_input::*} to "%expr-1%" split at " "
		#---------------------------------------------------------------------	
		loop {_input::*}:
			#DIFFICULTY
			delete {_split::*}
			if loop-value partially matches "^lvl:(1[0-5]|[1-9])-(1[0-5]|[1-9])$":
				delete {_input::%loop-index%}
				size of {_dif::*} = 0
				set {_split::*} to loop-value split at "-"
				replace "lvl:" in {_split::*} with ""
				add {_split::1} parsed as number to {_dif::*}
				add {_split::2} parsed as number to {_dif::*}
			#BPM+
			else if loop-value partially matches "^bpm:(?:[1-9]|[1-9][0-9]|[1-9][0-9]{2}|[1-9][0-9]{3}|101[0-5])\+$":
				delete {_input::%loop-index%}
				size of {_bpm::*} = 0
				set {_bpmdat} to loop-value
				replace "bpm:" and "+" in {_bpmdat} with ""
				add ({_bpmdat} parsed as number) and 1015 to {_bpm::*}
			#BPM-
			#else if loop-value partially matches "^bpm:-([1-9]|[1-9]\d{1,2}|[1-9]\d{3}|10\d{2}|101[0-5])$":
			
			else if loop-value partially matches "^bpm:(?:[1-9]|[1-9][0-9]|[1-9][0-9]{2}|1000|100[0-9]|101[0-5])-$":
				delete {_input::%loop-index%}
				size of {_bpm::*} = 0
				set {_bpmdat} to loop-value
				replace "bpm:" and "-" in {_bpmdat} with ""
				add 1 and ({_bpmdat} parsed as number) to {_bpm::*}
			#BPM
			else if loop-value partially matches "^bpm:(?:[1-9]|[1-9][0-9]{1,2}|[1-9][0-9]{3}|101[0-5])-(?:[1-9]|[1-9][0-9]{1,2}|[1-9][0-9]{3}|101[0-5])$":
				delete {_input::%loop-index%}
				size of {_bpm::*} = 0
				set {_split::*} to loop-value split at "-"
				replace "bpm:" in {_split::*} with ""
				add {_split::1} parsed as number to {_bpm::*}
				add {_split::2} parsed as number to {_bpm::*}
			#DESIGNER
			else if loop-value matches "^des:.+$":
				length of loop-value > 4
				delete {_input::%loop-index%}
				{_des} is not set
				set {_des} to loop-value
				replace "des:" in {_des} with ""
			#AUTHOR
			else if loop-value matches "^by:.+$":
				length of loop-value > 3
				delete {_input::%loop-index%}
				{_mby} is not set
				set {_mby} to loop-value
				replace "by:" in {_mby} with ""
		#---------------------------------------------------------------------
		set raw expr-2 to {_bpm::*}
		set raw expr-3 to {_dif::*}
		set raw expr-4 to {_des}
		set raw expr-5 to {_mby}
		set raw expr-6 to join {_input::*} with " "
		continue


#SEARCH MUSIC NAME
effect music-nm %~objects% filter %strings% save %~objects%:
	parse:
		expr-3 is an instance of Variable
		continue
	trigger:
		delay effect
		loop exprs-1:
			set {_name} to value "name::%loop-value%" of cached json "van_album_plus"
			set {_name} to value "name::%loop-value%" of cached json "mod_album_plus" if {_name} is not set
			loop exprs-2:
				"%{_name}% " contain "%loop-value-2%"
				replace first "%loop-value-2%" in {_name} with ""
				add 1 to {_chart::%loop-value-1%}
			delete {_nm::*}
		set {_sort::*} to sorted indices of {_chart::*} in descending order
		#
		if {_sort::1} is set:
			set {_math} to ({_chart::%{_sort::1}%}/size of exprs-2*100)
			loop {_sort::*}:
				if {_math} = 100:
					({_chart::%loop-value%}/size of exprs-2*100) != 100
					delete {_sort::%loop-index%}
				else if {_math} >= 75:
					({_chart::%loop-value%}/size of exprs-2*100) < 75
					delete {_sort::%loop-index%}
				else if {_math} >= 50:
					({_chart::%loop-value%}/size of exprs-2*100) < 50
					delete {_sort::%loop-index%}
				else:
					continue loop
		set raw expr-3 to {_sort::*}
		continue

#PARSE MUSIC NAME
expression music %strings% from streamer %string% with length of %number%:
	get:
		set {_uids::*} to expr-1
		loop {_uids::*}:
			set {_json} to value "name::%loop-value%::%{twitch::watchs::%expr-2%::lang} ? "en"%" of cached json "van_album"
			set {_json} to value "name::%loop-value%::%{twitch::watchs::%expr-2%::lang} ? "en"%" of cached json "mod_album" if {_json} is not set
			delete {_short}
			if expr-3 > 0:
				replace first "punai " in {_json} with ""
				set {_short} to short {_json} at expr-3
			add "%{_short} ? {_json}%" to {_m::*}
		return {_m::*}


#FILTER GENERATOR
expression music-filter bpm %~objects% lvl %~objects% des %~objects% by %~objects%:	
	get:
		set {_dif::*} to expr-2
		set {_bpm::*} to expr-1
		#
		add "üéº%first 6 characters of expr-4%" to {_filter::*} if expr-4 is set
		add "‚úèÔ∏è%first 6 characters of expr-3%" to {_filter::*} if expr-3 is set
		add "‚≠ê%{_dif::1}%~%{_dif::2}%" to {_filter::*} if expr-2 is set
		add "‚è≥%{_bpm::1}%~%{_bpm::2}%" to {_filter::*} if expr-1 is set
		set {_filter} to join {_filter::*} with " "
		#
		return {_filter} ? ""

#FILTER COLLONS
expression music-filter-sort %~objects%:	
	get:
		if (join exprs-1 with " ") matches "^\""[^\""]*\""$":
			set {_out::1} to join exprs-1 with " "
			replace first """" in {_out::1} with ""
			set {_out::1} to short {_out::1} at (length of {_out::1} - 1)
		else:
			add exprs-1 to {_out::*}
		return {_out::*}
