import:
	ch.njol.skript.lang.Variable
	java.security.MessageDigest
	java.math.BigInteger
	java.nio.file.Paths
	java.nio.file.Files
	java.nio.file.Path
	
	

effect store md5 in %~object% for file %string%:
	parse:
		expr-1 is an instance of Variable
		continue
	trigger:
		delay effect
		set {_file} to expr-2
		set {_pat} to Paths.get({_file})
		set {_bytes} to Files.readAllBytes({_pat})
		set {_md} to MessageDigest.getInstance("MD5")
		set {_digest} to {_md}.digest({_bytes})
		set {_hex} to new BigInteger(1, {_digest}).toString(16)
		while length of {_hex} < 32:
			set {_hex} to "0%{_hex}%"
		set raw expr-1 to {_hex} if {_hex} is set
		continue

command /mdmc-index:
	trigger:
		send a "get" request to "https://mdmc.moe/api/v5/charts"
		set {_get} to last response's body
		map {_get} to {_json::*}
		#
		remove json value "uids" from cached json "mod_album_plus"
		remove json value "uids" from cached json "mod_album"
		loop indices of {_json::*}:
			loop-value != "*"
			
			#ID
			set {_uid} to {_json::%loop-value%::id}	
			append "%{_json::%loop-value%::id}%" as nested object "uids[]" to cached json "mod_album_plus"
			append "%{_json::%loop-value%::id}%" as nested object "uids[]" to cached json "mod_album"
			
			#NAME
			if {_json::%loop-value%::name_romanized} is set:
				append "|%{_json::%loop-value%::name_romanized}%" as nested object "name:%{_uid}%[]" to cached json "mod_album_plus" if cached json "mod_album_plus" doesn't have value "|%{_json::%loop-value%::name_romanized}%"
			append "|%{_json::%loop-value%::author}%" as nested object "name:%{_uid}%[]" to cached json "mod_album_plus" if cached json "mod_album_plus" doesn't have value "|%{_json::%loop-value%::author}%"
			append "|%{_json::%loop-value%::name}%" as nested object "name:%{_uid}%[]" to cached json "mod_album_plus" if cached json "mod_album_plus" doesn't have value "|%{_json::%loop-value%::name}%"
			append "ðŸŽ¶%{_json::%loop-value-1%::name}%" with key "%{_uid}%" as nested object "name" to cached json "mod_album"
			
			#DESIGN
			loop 5 times:
				{_json::%loop-value-1%::levelDesigner%loop-value-2%} is set
				append "|%{_json::%loop-value-1%::levelDesigner%loop-value-2%}%" as nested object "design:%{_uid}%[]" to cached json "mod_album_plus" if cached json "mod_album_plus" doesn't have value "|%{_json::%loop-value-1%::levelDesigner%loop-value-2%}%"
			
			#BPM
			if "%{_json::%loop-value%::bpm}%" contain "-", " ", ")" or "(":
				delete {_bpm::*}
				replace " " in {_json::%loop-value%::bpm} with ""
				replace " ", "(" or "-" in {_json::%loop-value%::bpm} with "-"
				set {_bpm::*} to {_json::%loop-value%::bpm} split at "-"
				append ({_bpm::1} parsed as number) with key "min" as nested object "beats:%{_uid}%" to cached json "mod_album_plus"
				append ({_bpm::2} parsed as number) with key "max" as nested object "beats:%{_uid}%" to cached json "mod_album_plus"
			
			else:
				append "%{_json::%loop-value%::bpm}%" with key "min" as nested object "beats:%{_uid}%" to cached json "mod_album_plus"
				append "%{_json::%loop-value%::bpm}%" with key "max" as nested object "beats:%{_uid}%" to cached json "mod_album_plus"

		save cached json "mod_album_plus"
		save cached json "mod_album"
		broadcast "MDMC Basic ready!"








command /mdmc-update:
	trigger:
		set {_ind::*} to elements "uids[]" from cached json "mod_album"
		broadcast "ETA: %size of {_ind::*} * 0.5%s"
		loop {_ind::*}:
			wait 10 ticks
			sync create file path "plugins/Skript/scripts/unzip/%loop-value%/test.zip"
			sync download file from url "https://mdmc.moe/api/v5/download/%loop-value%" to file path "plugins/Skript/scripts/unzip/%loop-value%/test.zip"
			sync unzip all files from file path "plugins/Skript/scripts/unzip/%loop-value%/test.zip" to directory path "plugins/Skript/scripts/unzip/%loop-value%"

command /mdmc-local:
	trigger:
		set {_ind::*} to elements "uids[]" from cached json "mod_album"
		remove json value "level" from cached json "mod_album_plus"
		broadcast "ETA: %size of {_ind::*} * 0.5%s"
		
		loop {_ind::*}:
			delete {_map::*}
			delete {_dat::*}
			
			store md5 in {_map::1} for file "plugins/Skript/scripts/unzip/%loop-value%/map1.bms" if file path "plugins/Skript/scripts/unzip/%loop-value%/map1.bms" is available
			store md5 in {_map::1} for file "plugins/Skript/scripts/unzip/%loop-value%/map2.bms" if file path "plugins/Skript/scripts/unzip/%loop-value%/map2.bms" is available
			store md5 in {_map::1} for file "plugins/Skript/scripts/unzip/%loop-value%/map3.bms" if file path "plugins/Skript/scripts/unzip/%loop-value%/map3.bms" is available
			store md5 in {_map::1} for file "plugins/Skript/scripts/unzip/%loop-value%/map4.bms" if file path "plugins/Skript/scripts/unzip/%loop-value%/map4.bms" is available
			loop {_map::*}:
				append "%{_map::%loop-index-2%}%" with key loop-index-2 as nested object "lbs:%loop-value-1%" to cached json "mod_board"
			
			load json file "plugins/Skript/scripts/unzip/%loop-value%/info.json" as "info"
			add element "difficulty1" from cached json "info" to {_dat::*} if (element "difficulty1" from cached json "info") != "0"
			add element "difficulty2" from cached json "info" to {_dat::*} if (element "difficulty2" from cached json "info") != "0"
			add element "difficulty3" from cached json "info" to {_dat::*} if (element "difficulty3" from cached json "info") != "0"
			add element "difficulty4" from cached json "info" to {_dat::*} if (element "difficulty4" from cached json "info") != "0"
			loop {_dat::*}:
				append loop-value-1 as nested object "level:%loop-value-2%[]" to cached json "mod_album_plus"

		
		#sync delete directory path "plugins/Skript/scripts/unzip"
		broadcast "MDMC Leaderboards updated!"
		save cached json "mod_album_plus"
		save cached json "mod_board"
		remove cached json "info"




