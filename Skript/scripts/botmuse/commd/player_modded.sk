import:
	ch.njol.skript.lang.Variable


effect write %~object% with modded search for %~string%: # "~" stands for non-literal
	parse:
		expr-1 is an instance of Variable # making sure the input is a variable, optional
		continue
	trigger:
		delay effect
		send a "get" request to "https://api.musedash.moe/mdmc/search/%uncolored expr-2%"
		set {_res} to last response's body
		#
		replace every "],[" and """" and "]]"  in {_res} with ","
		set {_p::*} to {_res} split at ","
		set {_p::5} to "" if {_p::5} is not set
		set raw expr-1 to {_p::5}
		continue

effect store in %~object% an modded profile with uid %~string%: # "~" stands for non-literal
	parse:
		expr-1 is an instance of Variable
		continue
	trigger:
		delay effect
		send a "get" request to "https://mdmc.moe/api/v5/user/%uncolored expr-2%"
		set {_get} to last response's body
		map {_get} to {_json::*}
		#ORGANIZADOR
		replace "/webp/" in {_json::top_scores::1::chart::cover} with ""
		set {_user::muses} to json_keyget("muse:%{_json::top_scores::1::character_uid}%", "game_obj")
		set {_user::songs} to json_keyget("nam:%{_json::top_scores::1::chart::cover}%", "album_mod")
		set {_user::hards} to json_keyget("diff:%{_json::top_scores::1::chart::type}%", "game_obj")
		set {_user::elfin} to json_keyget("elfin:%{_json::top_scores::1::elfin_uid}%", "game_obj")
		set {_user::score} to {_json::top_scores::1::score}
		set {_user::leads} to {_json::top_scores::1::rank}
		set {_user::acurr} to {_json::top_scores::1::acc}
		set {_user::pgold} to {_json::all_perfects}
		set {_user::paccy} to {_json::accuracy}
		set {_user::prank} to {_json::rank}
		set {_user::pname} to {_json::name}
		
		#OUTPUT
		set raw expr-1 to "──────────────────────────────── 📜%{_user::pname}%️ ️ 🏆%{_user::pgold}%️ ️ 🎯%{_user::paccy}%️ ️ 🌐##%{_user::prank}% ──────────────────────────────── ️ 🏅%{_user::leads}%️ ️ 🎯%{_user::acurr}%%%️ ️ 🎮%{_user::score}%️ ️ 💠%{_user::muses}%%{_user::elfin}%️ ️ ️ ️ ️ ️ ️ ️ [%{_user::songs}% %{_user::hards}%" if {_json::error} is not set
		continue


skitch command layer <text>:
	prefixes: @p
	trigger:
		
		if arg-1 partially matches "^[0-9]*$":
			set {_data} to arg-1
			store in {_profile} an modded profile with uid uncolored arg-1
			stop if cmd cooldown for channel event-livechannel waits 5 is true
		
		if 16 >= length of arg-1:
			twitch reply with "This will take a few seconds..."
			stop if cmd cooldown for channel event-livechannel waits 6 is true
			write {_data} with modded search for uncolored arg-1
			store in {_profile} an modded profile with uid {_data}
		
		set {_data} to "https://mdmc.moe/user/%{_data}%"
		if {_profile} is set:
			delete {_data} if json_keyexist("stream:%event-livechannel%:links", "twitch") is false
			twitch reply with "%{_data} ? ""% %{_profile}%"
			stop

		twitch reply with "Oops! No results found for '%first 16 characters of arg-1%'"
		stop


