import:
	ch.njol.skript.lang.Variable


effect write %~object% with official search for %~string%: # "~" stands for non-literal
	parse:
		expr-1 is an instance of Variable # making sure the input is a variable, optional
		continue
	trigger:
		delay effect
		send a "get" request to "https://api.musedash.moe/search/%uncolored expr-2%"
		set {_res} to last response's body
		#
		replace every "],[" and """" and "]]"  in {_res} with ","
		set {_p::*} to {_res} split at ","
		set {_p::5} to "" if {_p::5} is not set
		set raw expr-1 to {_p::5}
		continue


effect store in %~object% an official profile with uid %~string%: # "~" stands for non-literal
	parse:
		expr-1 is an instance of Variable
		continue
	trigger:
		delay effect
		send a "get" request to "https://api.musedash.moe/player/%uncolored expr-2%"
		set {_get} to last response's body
		map {_get} to {_json::*}
		
		#ORGANIZADOR
		loop indices of {_json::plays::*}:
			loop-value != "*"
			add 100 to {_globalacc}
			add {_json::plays::%loop-value%::acc} to {_collectacc}
			add 1 to {_user::gold} if {_json::plays::%loop-value%::acc} = 100
			({_i} ? 4000) >= {_json::plays::%loop-value%::i}
			if ({_i} ? 4000) > {_json::plays::%loop-value%::i}:
				set {_i} to {_json::plays::%loop-value%::i}
				set {_s} to 0
			({_i} ? 4000) = {_json::plays::%loop-value%::i}
			({_s} ? 0) < {_json::plays::%loop-value%::score}
			set {_s} to {_json::plays::%loop-value%::score}
			set {_user::score} to {_json::plays::%loop-value%::score}
			set {_user::leads} to ({_json::plays::%loop-value%::i} + 1)
			set {_user::acurr} to rounded {_json::plays::%loop-value%::acc}
			set {_user::songs} to json_keyget("nam:%{_json::plays::%loop-value%::uid}%", "album_off")
			set {_user::elfin} to json_keyget("elfin:%{_json::plays::%loop-value%::elfin_uid}%", "game_obj")
			set {_user::hards} to json_keyget("diff:%{_json::plays::%loop-value%::difficulty}%", "game_obj")
			set {_user::platf} to json_keyget("platform:%{_json::plays::%loop-value%::platform}%", "game_obj")
			set {_user::muses} to json_keyget("muse:%{_json::plays::%loop-value%::character_uid}%", "game_obj")
		#PROFILE		
		set raw expr-1 to "──────────────────────────────── 📜%{_json::user::nickname}% ️🏆%{_user::gold} ? 0% ️🎯%round (({_collectacc}/{_globalacc})*100) to 2%%% ️🎂%first (index of "T" in {_json::user::created_at} - 1) characters of {_json::user::created_at}% ──────────────────────────────── ️ %{_user::platf}%##%{_user::leads}%️ ️ 🎯%{_user::acurr}%%%️ ️ 🎮%{_user::score}%️ ️ 💠%{_user::muses}%%{_user::elfin}%️ ️ ️ ️ ️ ️ ️ ️ [%{_user::songs}% %{_user::hards}%" if {_json::user::nickname} is set
		continue


skitch command player <text>:
	prefixes: -
	trigger:
		
		if 32 = length of arg-1:
			stop if cmd cooldown for channel event-livechannel waits 5 is true
			set {_data} to arg-1
			store in {_profile} an official profile with uid uncolored arg-1

		if 10 >= length of arg-1:
			stop if cmd cooldown for channel event-livechannel waits 8 is true
			twitch reply with "This will take a few seconds..."
			write {_data} with official search for uncolored arg-1
			store in {_profile} an official profile with uid {_data}

		set {_data} to "https://musedash.moe/player/%{_data}%"
		if {_profile} is set:
			delete {_data} if json_keyexist("stream:%event-livechannel%:links", "twitch") is false
			twitch reply with "%{_data} ? ""% %{_profile}%"
			stop
		
		twitch reply with "Oops! No results found for '%first 10 characters of arg-1%'"
		stop

