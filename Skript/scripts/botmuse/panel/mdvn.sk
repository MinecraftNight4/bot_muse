import:
	ch.njol.skript.lang.Variable

effect json-fixer %string% and store %~objects%:
	parse:
		expr-2 is an instance of Variable
		continue
	trigger:
		delay effect
		sync fetch url "%expr-1%"
		set {_cache} to the fetched url content
		sync fetch url "%expr-1%"
		replace newline or "	" in {_cache} with ""
		replace ",}" in {_cache} with "}"
		sync delete file path "plugins/musedash/temp.json"
		sync create file path "plugins/musedash/temp.json" with text "{""data"": %{_cache}%}"
		link json file "plugins/musedash/temp.json" as "temp"
		set raw expr-2 to cached json "temp"
		continue


#------------------------------------------------------------------------------------------------------------
command /mdvn_reset <number>:
	trigger:
		broadcast "Running... %arg * 1.5 + 7%"
		loop arg-1 times:
			json-fixer "https://raw.githubusercontent.com/simon300000/musedash.moe/master/api/albums/ALBUM%loop-value%.json" and store {_chart}
			loop ("Korean|kr|English|en|Japanese|jp|ChineseT|zh|ChineseS|zhs" split at "|"):
				wait 5 ticks
				if {_i} is not set:
					set {_i} to loop-value-2
				else:
					json-fixer "https://raw.githubusercontent.com/simon300000/musedash.moe/master/api/albums/ALBUM%loop-value-1%_%{_i}%.json" and store {_lang::%loop-value-2%}
					delete {_i}
			set {_lang::es} to {_lang::en}
			set {_val} to 0
			
			loop entries "data[]" of {_chart}:
				add 1 to {_val}
				set {_json} to loop-element-2
				set {_id} to value "uid" of {_json}
				
				#BY
				set json value "author::%{_id}%" in cached json "van_album_plus" to value "author" of {_json}
				
				#NAME
				if see-json "van_album_plus" have key "name::%{_id}%" is false:
					delete {_names::*}
					loop {_lang::*}:
						set {_e} to value "data[%{_val}%]::name" of {_lang::%loop-index%}
						set json value "name::%{_id}%::%loop-index%" in cached json "van_album" to "ðŸŽµ%{_e}%"
						"%{_names::*} ? ""%" don't contain "%{_e}%"
						add {_e} to {_names::*}
					set json value "name::%{_id}%" in cached json "van_album_plus" to "%join {_names::*} with "   "% "
				
				#LEVEL
				loop 5 times:
					{_json} has key "callBackDifficulty%loop-value-3%"
					value "callBackDifficulty%loop-value-3%" of {_json} != 0
					set {_lvl} to value "callBackDifficulty%loop-value-3%" of {_json}
					nest-json "%{_id}%" at "level::%{_lvl}%" of cached "van_album_plus"
				
				#DESIGN
				set json value "design::%{_id}%" in cached json "van_album_plus" to "|%value "levelDesigner" of {_json} ? ""% %value "levelDesigner1" of {_json} ? ""% %value "levelDesigner2" of {_json} ? ""% %value "levelDesigner3" of {_json} ? ""% %value "levelDesigner4" of {_json} ? ""% %value "levelDesigner5" of {_json} ? ""%"
		
				#BPM
				if "%value "bpm" of {_json}%" contain "~" or "ï½ž":
					set {_e} to value "bpm" of {_json}
					replace "ï½ž" in {_e} with "~"
					set {_bpm::*} to {_e} split at "~"
					set json value "beats::%{_id}%::min" in cached json "van_album_plus" to ({_bpm::1} parsed as number)
					set json value "beats::%{_id}%::max" in cached json "van_album_plus" to ({_bpm::2} parsed as number)
				else:
					set json value "beats::%{_id}%::min" in cached json "van_album_plus" to ("%value "bpm" of {_json}%" parsed as number)
					set json value "beats::%{_id}%::max" in cached json "van_album_plus" to ("%value "bpm" of {_json}%" parsed as number)
				
				wait 2 tick
		
		save cached json "van_album_plus"
		save cached json "van_album"
		broadcast "Over!"
			
			